/*
 * WARNING: This file was generated by BitByBitGenerator.xtend (see
 * generateEnumFile()). 
 * Do not edit.
 */
package com.example.test;

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

public enum Instrument {
    IMAGER(0, "imager"),
    SCANNER(1, "scanner");

   private static final Map<Integer, Instrument> lookup = new HashMap<Integer, Instrument>();

   static {
      for (Instrument enumType : EnumSet.allOf(Instrument.class)) {
         lookup.put(enumType.getId(), enumType);
      }
   }

   private final int id;
   private final String value;

   Instrument(int id, String v) {
      this.id = id;
      this.value = v;
   }

   public int getId() {
      return this.id;
   }

   public String value() {
      return this.value;
   }

   public static Instrument fromValue(String v) {
      for (Instrument instrument : Instrument.values()) {
         if (instrument.value.equals(v)) {
               return instrument;
         }
      }
      throw new IllegalArgumentException(v);
   }

   public static Instrument toEnum(int id) {
      return lookup.get(id);
   }
}
