/*
 * WARNING: This file was generated by BitByBitGenerator.xtend (see
 * generateEnumFile()). 
 * Do not edit.
 */
package com.viacron.greenball.app.bbb;

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

public enum UserStatusEnum {
    ACTIVE(0, "Active"),
    CONTRACTOR(1, "Contractor"),
    DEFAULT(2, "Default"),
    DEVELOPER(3, "Developer"),
    PENDING(4, "Pending"),
    PROBATION(5, "Probation"),
    SIGNUP(6, "SignUp"),
    SUSPENDED(7, "Suspended"),
    SUPPORT(8, "Support"),
    TEST(9, "Test"),
    TRAINING(10, "Training");

   private static final Map<Integer, UserStatusEnum> lookup = new HashMap<Integer, UserStatusEnum>();

   static {
      for (UserStatusEnum enumType : EnumSet.allOf(UserStatusEnum.class)) {
         lookup.put(enumType.getId(), enumType);
      }
   }

   private final int id;
   private final String value;

   UserStatusEnum(int id, String v) {
      this.id = id;
      this.value = v;
   }

   public int getId() {
      return this.id;
   }

   public String value() {
      return this.value;
   }

   public static UserStatusEnum fromValue(String v) {
      for (UserStatusEnum userStatusEnum : UserStatusEnum.values()) {
         if (userStatusEnum.value.equals(v)) {
               return userStatusEnum;
         }
      }
      throw new IllegalArgumentException(v);
   }

   public static UserStatusEnum toEnum(int id) {
      return lookup.get(id);
   }
}
