/*
 * WARNING: This file was generated by BitByBitGenerator.xtend (see
 * generateEnumFile()). 
 * Do not edit.
 */
package com.viacron.greenball.app.bbb;

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

public enum TenBitEnum {
    ONE(0, "one"),
    TWO(1, "two"),
    THREE(2, "three"),
    FOUR(3, "four"),
    FIVE(4, "five"),
    SIX(5, "six"),
    SEVEN(6, "seven"),
    EIGHT(7, "eight"),
    NINE(8, "nine"),
    TEN(9, "ten");

   private static final Map<Integer, TenBitEnum> lookup = new HashMap<Integer, TenBitEnum>();

   static {
      for (TenBitEnum enumType : EnumSet.allOf(TenBitEnum.class)) {
         lookup.put(enumType.getId(), enumType);
      }
   }

   private final int id;
   private final String value;

   TenBitEnum(int id, String v) {
      this.id = id;
      this.value = v;
   }

   public int getId() {
      return this.id;
   }

   public String value() {
      return this.value;
   }

   public static TenBitEnum fromValue(String v) {
      for (TenBitEnum tenBitEnum : TenBitEnum.values()) {
         if (tenBitEnum.value.equals(v)) {
               return tenBitEnum;
         }
      }
      throw new IllegalArgumentException(v);
   }

   public static TenBitEnum toEnum(int id) {
      return lookup.get(id);
   }
}
